version: '3.8'

services:
  auth-db:
    image: postgres
    environment:
      - CREATE_USER_INTERACTIVE=off
    volumes:
      - ./auth-db/init/:/docker-entrypoint-initdb.d/

  postgres:
    container_name: pg_storage_ms
    image: postgres:latest
    networks:
      - msauth
    restart: always
    env_file: .env
    environment:
      - POSTGRES_USER=${STORAGE_DB_USERNAME}
      - POSTGRES_PASSWORD=${STORAGE_DB_PASSWORD}
    logging:
      options:
        max-size: 10m
        max-file: "3"
    # network_mode: "host"
    ports:
      - '${STORAGE_DB_PORT}:${STORAGE_DB_PORT}'
    volumes: 
      #- ./postgres-data:/var/lib/postgresql/data
      - ./storage/init/sql:/docker-entrypoint-initdb.d
    command: -p ${STORAGE_DB_PORT}

  rabbitmq:
    depends_on:
      - auth-db
    container_name: rabbitmq_ms
    hostname: rabbitmq
    networks:
      - msauth
    image:
      rabbitmq:latest
    environment:
      - RABBIT_HOST_IP=0.0.0.0
    ports:
      - 15672:15672
      - 5672:5672

  storage:
    depends_on:
      - auth-db
      - postgres
    networks:
      - msauth
    build: 
      context: ./storage/
    ports:
      - 50006:50006

    
  # auth:
  #   depends_on:
  #     - auth-db
  #   image: openjdk:11-jre-slim
  #   build: 
  #     context: ./auth/
  #   volumes:
  #     - ${AUTH_INIT_DIR_PATH}/preEntrypoint.sh ${AUTH_DOCKER_DIR_PATH}/
  #     - ${AUTH_CORE_DIR_PATH}${AUTH_SOURCE_JAR} ${AUTH_DOCKER_DIR_PATH}/msAuthApp.jar
  #   working_dir: ${AUTH_DOCKER_DIR_PATH}/
  #   env_file:
  #     - ./auth/variables.env
  #   entrypoint:
  #    - ./preEntrypoint.sh
  #    - java
  #    - -jar
  #    - ./msAuthApp.jar

  cache:
    depends_on:
      - auth-db
      - storage
    networks:
      - msauth
    build: 
      context: ./cache/
    ports:
      - 50003:50003
    
  client:
    depends_on:
      - auth-db
      - storage
    networks:
      - msauth
    build: 
      context: ./client/
    ports:
      - 50009:50009

  # config:
  #   depends_on:
  #     - auth-db

  crawler:
    depends_on:
      - auth-db
      - storage
      - rabbitmq
    networks:
      - msauth
    restart: on-failure
    build: 
      context: ./crawler/
    ports:
      - 50002:50002

  exporter:
    depends_on:
      - auth-db
    build: ./exporter/core/exporter/


  # notification:
  #   depends_on:
  #     - auth-db

  

  parser:
    depends_on:
      - auth-db
      - storage
      - rabbitmq
    networks:
      - msauth
    restart: on-failure
    build: 
      context: ./parser/
    ports:
      - 50005:50005

  statistics:
    depends_on:
      - auth-db
    build: ./statistics/core/statistics/

networks:
  msauth:
    external: true
    name: msauth